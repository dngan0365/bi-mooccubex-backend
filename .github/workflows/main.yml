name: FastAPI CI/CD
on:
  push:
    branches:
      - main
# The Job defines a series of steps that execute on the same runner.
jobs:
  CI:
    # Define the runner used in the workflow.
    runs-on: ubuntu-latest
    steps:
      # The checkout step checks out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
      - uses: actions/checkout@v2
      # Step 1 Set up Python
      - name: Set up Python
        # This step sets up a Python environment for the workflow.
        uses: actions/setup-python@v2
        with:
          python-version: 3.12 # optional: architecture: 'x64' # or 'arm64'. Default is 'x64'.
      # Step 2 Install Python Virtual Environment
      - name: Install Python Virtual Environment
        run: pip3 install virtualenv

      # Step 3 Setup Virtual Environment
      - name: Virtual Environment
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv # Path to cache
          # cache-key
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
          # restore-keys
          restore-keys: |
            ${{ runner.os }}-venv-

      # Step 4 Build a Virtual Environment, but only if it doesn't already exist
      - name: Activate Virtual Environment
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run Tests
        # Note that you have to activate the virtualenv in every step
        # because GitHub actions does not persist the environment between steps.
        run: . venv/bin/activate && pytest
      - name: Create archieve of dependencies
        run: |
          cd./venv/lib/python3.12/site-packages
          zip -r9 ../../../../api.zip .
      - name: Add API files to Zip file
        run: cd ./api && zip -g ../api.zip -r .
      - name: Upload zip file artifact
        # uploads artifacts from your workflow allowing you to share data between jobs
        # Stores data once a workflow is complete
        uses: actions/upload-artifact@v2
        with: 
          name: api
          path:: api.zip
